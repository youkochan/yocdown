// [PackageDev] target_format: plist, ext: tmLanguage
{
    "foldingStartMarker": "(?x)\n(<(?i:head|body|table|thead|tbody|tfoot|tr|div|select|fieldset|style|script|ul|ol|form|dl)\\b.*?>\n|<!--(?!.*-->)\n|\\{\\s*($|\\?>\\s*$|//|/\\*(.*\\*/\\s*$|(?!.*?\\*/)))\n)", 
    "scopeName": "text.html.markdown", 
    "foldingStopMarker": "(?x)\n(</(?i:head|body|table|thead|tbody|tfoot|tr|div|select|fieldset|style|script|ul|ol|form|dl)>\n|^\\s*-->\n|(^|\\s)\\}\n)", 
	"name": "YocDown",
    "fileTypes": ["md", "markdown", "yoc"],
    "patterns": [
        {
            "match" : "^>+ .+$",
            "name": "markup.quote, punctuation.definition.blockquote.markdown"
        },
        {
            "comment": "for inline raw",
            "match": "`[^`]+`",
            "name": "text.html.markdown markup.raw.inline"
        },
        {
            "comment": "for markdown picture and url (complex)",
            "match": "!?\\[(!?\\[[^\\]]*\\]\\([^\\)]*\\))\\]\\(([^\\) ]*)\\)",
            "captures": {
                "0": { "name": "markup.raw.block" },
                "1": { "name": "string.other.link.title.markdown" },
                "2": { "name": "markup.underline" }
            }
        },
        {
            "comment": "for markdown picture and url (simple)",
            "match": "!?\\[([^\\]]*)\\]\\(([^\\) ]*)\\)",
            "captures": {
                "0": { "name": "markup.raw.block" },
                "1": { "name": "string.other.link.title.markdown" },
                "2": { "name": "markup.underline" }
            }
        },
        {
            "comment": "for markdown unordered list",
            "match": "^([ ]{4}|\\t)*([\\*-] )",
            "name": "constant.numeric"
        },
        {
            "comment": "for markdown ordered list",
            "match": "^[0-9]+\\.[ ]",
            "name": "constant.numeric"
        },
        {
            "comment": "for markdown separator",
            "match": "^([=-])\\1{3,}$",
            "name": "meta.separator"
        },
        {
            "comment": "for markdown heading",
            "match": "^[#]+\\s.+$",
            "name": "markdown.heading, markup.heading | markup.heading entity.name, markup.heading.markdown punctuation.definition.heading.markdown"
        },
        {
            "name": "markup.raw.block.markdown markup.raw.block.fenced.markdown", 
            "end": "(```|~~~|{%\\s*endhighlight\\s*%})\\n", 
            "begin": "(```|~~~|{%\\s*highlight)\\s*(cpp)\\s*((?:linenos\\s*)?%})?$", 
            "patterns": [
                { "include": "source.c++" }
            ], 
            "captures": {
                "1": { "name": "punctuation.definition.fenced.markdown" }, 
                "2": { "name": "variable.language.fenced.markdown" }, 
                "3": { "name": "punctuation.definition.fenced.markdown" }
            }
        },
        {
            "name": "markup.raw.block.markdown markup.raw.block.fenced.markdown", 
            "end": "(```|~~~|{%\\s*endhighlight\\s*%})\\n", 
            "begin": "(```|~~~|{%\\s*highlight)\\s*(c)\\s*((?:linenos\\s*)?%})?$", 
            "patterns": [
                { "include": "source.c" }
            ],
            "beginCaptures": {
                "1": { "name": "punctuation.definition.fenced.markdown" }, 
                "2": { "name": "variable.language.fenced.markdown" }, 
                "3": { "name": "punctuation.definition.fenced.markdown" }
            },
            "endCaptures": {
                "0": { "name": "punctuation.definition.fenced.markdown" }
            }
        },
        {
            "name": "markup.raw.block.markdown markup.raw.block.fenced.markdown", 
            "end": "(```|~~~|{%\\s*endhighlight\\s*%})\\n", 
            "begin": "(```|~~~|{%\\s*highlight)\\s*(json)\\s*((?:linenos\\s*)?%})?$", 
            "patterns": [
                { "include": "source.json" }
            ], 
            "captures": {
                "1": { "name": "punctuation.definition.fenced.markdown" }, 
                "2": { "name": "variable.language.fenced.markdown" }, 
                "3": { "name": "punctuation.definition.fenced.markdown" }
            }
        },
        {
            "name": "markup.raw.block.markdown markup.raw.block.fenced.markdown", 
            "end": "(```|~~~|{%\\s*endhighlight\\s*%})\\n", 
            "begin": "(```|~~~|{%\\s*highlight)\\s*(css)\\s*((?:linenos\\s*)?%})?$", 
            "patterns": [ 
                { "include": "source.css" }
            ], 
            "captures": {
                "1": { "name": "punctuation.definition.fenced.markdown" }, 
                "2": { "name": "variable.language.fenced.markdown" }, 
                "3": { "name": "punctuation.definition.fenced.markdown" }
            }
        },
        {
            "name": "markup.raw.block.markdown markup.raw.block.fenced.markdown", 
            "end": "(```|~~~|{%\\s*endhighlight\\s*%})\\n", 
            "begin": "(```|~~~|{%\\s*highlight)\\s*(hbs|handlebars|html|html5)\\s*((?:linenos\\s*)?%})?$",
            "patterns": [ 
                { "include": "text.html.basic" },
                { "include": "text.html.handlebars" }
            ], 
            "captures": {
                "1": { "name": "punctuation.definition.fenced.markdown" }, 
                "2": { "name": "variable.language.fenced.markdown" }, 
                "3": { "name": "punctuation.definition.fenced.markdown" }
            }
        },
        {
            "name": "markup.raw.block.markdown markup.raw.block.fenced.markdown", 
            "end": "(```|~~~|{%\\s*endhighlight\\s*%})\\n", 
            "begin": "(```|~~~|{%\\s*highlight)\\s*(javascript|js)\\s*((?:linenos\\s*)?%})?$", 
            "patterns": [
                { "include": "source.js" }
            ], 
            "captures": {
                "1": { "name": "punctuation.definition.fenced.markdown" }, 
                "2": { "name": "variable.language.fenced.markdown" }, 
                "3": { "name": "punctuation.definition.fenced.markdown" }
            }
        },
        {
            "name": "markup.raw.block.markdown markup.raw.block.fenced.markdown", 
            "end": "(```|~~~|{%\\s*endhighlight\\s*%})\\n", 
            "begin": "(```|~~~|{%\\s*highlight)\\s*(java)\\s*((?:linenos\\s*)?%})?$", 
            "patterns": [
                { "include": "source.java" }
            ], 
            "captures": {
                "1": { "name": "punctuation.definition.fenced.markdown" }, 
                "2": { "name": "variable.language.fenced.markdown" }, 
                "3": { "name": "punctuation.definition.fenced.markdown" }
            }
        },
        {
            "name": "markup.raw.block.markdown markup.raw.block.fenced.markdown", 
            "end": "(```|~~~|{%\\s*endhighlight\\s*%})\\n", 
            "begin": "(```|~~~|{%\\s*highlight)\\s*(md|markdown)\\s*((?:linenos\\s*)?%})?$", 
            "patterns": [
                { "include": "text.html.markdown" }
            ], 
            "captures": {
                "1": { "name": "punctuation.definition.fenced.markdown" }, 
                "2": { "name": "variable.language.fenced.markdown" },
                "3": { "name": "punctuation.definition.fenced.markdown" }
            }
        },
        {
            "name": "markup.raw.block.markdown markup.raw.block.fenced.markdown", 
            "end": "(```|~~~|{%\\s*endhighlight\\s*%})\\n", 
            "begin": "(```|~~~|{%\\s*highlight)\\s*(python)\\s*((?:linenos\\s*)?%})?$", 
            "patterns": [
                { "include": "source.python" }
            ], 
            "captures": {
                "1": { "name": "punctuation.definition.fenced.markdown" }, 
                "2": { "name": "variable.language.fenced.markdown" },
                "3": { "name": "punctuation.definition.fenced.markdown" }
            }
        },
        {
            "comment": "for jekyll yaml front",
            "begin": "^---$",
            "end": "^---$",
            // "name": "markup.heading",
            "patterns": [
                { "include": "#front-matter" }
            ]
        },
        // for GFM italics
        {
            "comment": "for GFM: italic",
            "match": "([^a-zA-Z0-9-\\.]|\\s)(_[^\\s_]+_)([^a-zA-Z0-9-\\.]|\\s)",
            "captures": {
                "2": { "name": "markup.italic" }
            }
        },
        {
            "comment": "for GFM: bold",
            "match": "(\\*\\*[^\\s\\*]+\\*\\*)",
            "captures": {
                "1": { "name": "markup.bold" }
            }
        },
        {
            "comment": "for GFM: italic",
            "match": "([^a-zA-Z0-9-\\.]|\\s)(\\*[^\\s\\*]+\\*)([^a-zA-Z0-9-\\.]|\\s)",
            "captures": {
                "2": { "name": "markup.italic" }
            }
        },
        {
            "comment": "for GFM: bold",
            "match": "([^a-zA-Z0-9-\\.]|\\s)(__[^\\s\\*]+__)([^a-zA-Z0-9-\\.]|\\s)",
            "captures": {
                "2": { "name": "markup.bold" }
            }
        },
        {
            "comment": "for GFM: Strikethrough",
            "match": "(~~[^\\s~]+~~)",
            "captures": {
                "1": { "name": "comment.line.number-sign.shell" }
            }
        },
        {
            "name": "markup.raw.block.markdown markup.raw.block.fenced.markdown", 
            "match": "^([ ]{4}|\\t)+[^\\*\\s-].+\\n"
        } 
    ],
    "repository": {
        "link-footnote": {
            "patterns": [
                {
                    "captures": {
                        "1": { "name": "punctuation.definition.constant.begin.markdown.jekyll" },
                        "2": { "name": "constant.other.reference.link.markdown.jekyll" },
                        "3": { "name": "punctuation.definition.constant.end.markdown.jekyll"}
                    },
                    "match": ".?(\\[)([^\\]]*)(\\])",
                    "name": "constant.other.reference.link.markdown.jekyll"
                }
            ]
        },
        "front-matter": {
            "comment": "for jekyll yaml front",
            "patterns": [
                // { "include": "source.yaml" }
                {
                    "match": "^([\\s-]*[a-zA-Z0-9_-]+):([^#]*)",
                    "captures": {
                        "1": { "name": "entity.name.tag" },
                        "2": { "name": "entity.other.attribute-name" }
                    }
                },
                {
                    "match" : "[^#]*(#.*)",
                    "captures": {
                        "1": {  "name" : "comment" }
                    }
                }
            ]
        }  
    },
    "uuid": "ca03e751-04ef-4330-9a6b-9b99aae1c418"
}